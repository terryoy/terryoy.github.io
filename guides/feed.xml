<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Hello, World!</title>
    <link href="http://terryoy.github.io/guides/feed.xml" rel="self" />
    <link href="http://terryoy.github.io/guides/" />
    <updated>2014-02-06T18:12:24+08:00</updated>
    <id>http://terryoy.github.io/guides/</id>
    <entry>
        <title type="html"><![CDATA[Matplotlib Example in Short (1) - The Plotting Graph]]></title>
        <author><name>terryoy</name></author>
        <link href="http://terryoy.github.io/2013/12/matplotlib-simple-guide-1.html"/>
        <published>2013-12-31T01:00:00+08:00</published>
        <updated>2014-01-07T15:19:11+08:00</updated>
        <id>http://terryoy.github.io/2013/12/matplotlib-simple-guide-1.html</id>
        <category scheme="http://terryoy.github.io/tag/#python" term="python" label="python" />
        <category scheme="http://terryoy.github.io/tag/#graph" term="graph" label="graph" />
        <category scheme="http://terryoy.github.io/tag/#matplotlib" term="matplotlib" label="matplotlib" />
        <content type="html" xml:base="http://terryoy.github.io/" xml:lang="en">
            <![CDATA[ <p>The book <a href="http://www.amazon.com/Beginning-Python-Visualization-Transformation-Professionals/dp/1430218436"><em>&ldquo;Beginning Python Visualization&rdquo;</em></a> (by Shai Vaingast) is a great book for learning data visualization with Python. Here I would like to write a short reference guide for the Matplotlib usage after studying with it.</p>

<h2 id="toc_0">Why Matplotlib?</h2>
<p>In my opinion, there are different purpose while working on visualization: 1. scientific presentation; 2. web(real time / periodic update) presentation; 3. artistic presentation. The <strong>Matplotlib</strong> library in python is mainly served for the first and the  purpose, where you can easily plot data on the graph for analyzing and crafting your visualization script, at the same time you could use with IPython Notebook or in other web development to render statistics and display on the web. </p>
<p>If you have complicated graph or artistic requirements on the final result, you might move on to <a href="http://bokeh.pydata.org/">Bokeh</a> or <a href="">NodeBox OpenGL</a>, but matplotlib is still a handy tool for dealing with raw data in preceding scenarios.</p>

<h2 id="toc_1">The Basic Plotting</h2>
<p>Here is a basic example to show how to use the basic plotting function in Matplotlib.</p>
<p>The graph image:</p>
<p><img src="http://terryoy-github.u.qiniudn.com/blog/images/2013/matplotlib_sum_graph.png" alt="alt" title="Matplotlib Plotting Graph Summary example"/></p>
<p>The source code:</p>
<div class="highlight"><pre><span class="c"># remember in matplotlib-1.1 we import everything from **pylab** </span>
<span class="kn">from</span> <span class="nn">pylab</span> <span class="kn">import</span> <span class="o">*</span>

<span class="n">I</span> <span class="o">=</span> <span class="n">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">2</span><span class="o">*</span><span class="n">pi</span><span class="o">+</span><span class="mf">0.1</span><span class="p">,</span> <span class="mf">0.01</span><span class="p">)</span>
<span class="n">hold</span><span class="p">(</span><span class="bp">True</span><span class="p">)</span>
<span class="n">plot</span><span class="p">(</span><span class="n">cos</span><span class="p">(</span><span class="n">I</span><span class="p">),</span> <span class="n">sin</span><span class="p">(</span><span class="n">I</span><span class="p">),</span> <span class="n">label</span><span class="o">=</span><span class="s">&#39;x = cos($</span><span class="se">\a</span><span class="s">lpha$), y = sin($</span><span class="se">\a</span><span class="s">lpha$)&#39;</span><span class="p">)</span>
<span class="n">plot</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span> <span class="n">cos</span><span class="p">(</span><span class="n">pi</span> <span class="o">/</span> <span class="mi">4</span><span class="p">)],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="n">sin</span><span class="p">(</span><span class="n">pi</span><span class="o">/</span><span class="mi">4</span><span class="p">)],</span> <span class="s">&quot;k-&quot;</span><span class="p">,</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="s">&quot;k-&quot;</span><span class="p">)</span> 
<span class="n">I1</span> <span class="o">=</span> <span class="n">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">pi</span><span class="o">/</span><span class="mi">4</span><span class="p">,</span> <span class="mf">0.01</span><span class="p">)</span>
<span class="n">plot</span><span class="p">(</span><span class="mf">0.3</span> <span class="o">*</span> <span class="n">cos</span><span class="p">(</span><span class="n">I1</span><span class="p">),</span> <span class="mf">0.3</span> <span class="o">*</span> <span class="n">sin</span><span class="p">(</span><span class="n">I1</span><span class="p">),</span> <span class="s">&#39;b--&#39;</span><span class="p">)</span>
<span class="n">title</span><span class="p">(</span><span class="s">&#39;Drawing a Cicle by Radius&#39;</span><span class="p">)</span>
<span class="n">xlabel</span><span class="p">(</span><span class="s">&#39;x = cos(I), I = [0, $2\pi$]&#39;</span><span class="p">)</span>
<span class="n">ylabel</span><span class="p">(</span><span class="s">&#39;y = sin(I), I = [0, $2\pi$]&#39;</span><span class="p">)</span>
<span class="n">text</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="s">&#39;Top&#39;</span><span class="p">,</span> <span class="n">ha</span><span class="o">=</span><span class="s">&#39;left&#39;</span><span class="p">,</span> <span class="n">va</span><span class="o">=</span><span class="s">&#39;bottom&#39;</span><span class="p">)</span>
<span class="n">text</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="s">&#39;Bottom&#39;</span><span class="p">,</span> <span class="n">ha</span><span class="o">=</span><span class="s">&#39;left&#39;</span><span class="p">,</span> <span class="n">va</span><span class="o">=</span><span class="s">&#39;top&#39;</span><span class="p">)</span>
<span class="n">text</span><span class="p">(</span><span class="mf">0.4</span> <span class="o">*</span> <span class="n">cos</span><span class="p">(</span><span class="n">pi</span> <span class="o">/</span> <span class="mi">8</span><span class="p">),</span> <span class="mf">0.4</span> <span class="o">*</span> <span class="n">sin</span><span class="p">(</span><span class="n">pi</span> <span class="o">/</span> <span class="mi">8</span><span class="p">),</span> <span class="s">&#39;$45^\circ$&#39;</span><span class="p">,</span> <span class="n">ha</span><span class="o">=</span><span class="s">&#39;left&#39;</span><span class="p">,</span> <span class="n">va</span><span class="o">=</span><span class="s">&#39;bottom&#39;</span><span class="p">)</span>
<span class="n">xticks</span><span class="p">(</span><span class="n">arange</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mf">0.25</span><span class="p">))</span>
<span class="n">xlim</span><span class="p">([</span><span class="o">-</span><span class="mf">1.2</span><span class="p">,</span> <span class="mf">1.2</span><span class="p">])</span>
<span class="n">ylim</span><span class="p">([</span><span class="o">-</span><span class="mf">1.2</span><span class="p">,</span> <span class="mf">1.2</span><span class="p">])</span>
<span class="n">grid</span><span class="p">()</span>

<span class="n">show</span><span class="p">()</span>
</pre></div>
<p>Now let&#39;s check out each commands we could use.</p>

<h3 id="toc_2">1. plot(), markers, line styles, and colors</h3>
<div class="highlight"><pre><span class="c"># plot accept vectors to draw lines</span>
<span class="n">plot</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">])</span>   <span class="c"># given one vector, it will take it as both X, and Y</span>
<span class="n">plot</span><span class="p">(</span><span class="n">arange</span><span class="p">(</span><span class="mi">5</span><span class="p">))</span>     <span class="c"># arange() is a function from NumPy which could generate vectors</span>
<span class="n">I</span> <span class="o">=</span> <span class="n">arange</span><span class="p">(</span><span class="o">-</span><span class="mi">5</span><span class="p">,</span> <span class="mf">5.1</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>    <span class="c"># arange(begin value, end value, step)</span>
<span class="n">plot</span><span class="p">(</span><span class="n">I</span><span class="p">,</span> <span class="mi">2</span><span class="o">*</span><span class="n">I</span><span class="p">)</span>    <span class="c"># plot a &quot;y = 2x&quot; line with the vector I as X&#39;s range</span>

<span class="n">plot</span><span class="p">(</span><span class="n">I</span><span class="p">,</span> <span class="mi">2</span><span class="o">*</span><span class="n">I</span><span class="p">,</span> <span class="s">&#39;ko-&#39;</span><span class="p">,</span> <span class="n">I</span><span class="p">,</span> <span class="n">I</span><span class="o">*</span><span class="n">I</span><span class="p">,</span> <span class="s">&#39;bD--&#39;</span><span class="p">)</span> <span class="c"># multi-plot with options in one line</span>

<span class="c"># now check out the short options, which you could use in the third parameter in each plot</span>
<span class="c"># -- Markers (check out doc for more)</span>
<span class="c">#   &#39;o&#39;: Circle, </span>
<span class="c">#   &#39;^&#39;: Upward-pointing triangle,</span>
<span class="c">#   &#39;s&#39;: Sqaure,</span>
<span class="c">#   &#39;+&#39;: Plus,</span>
<span class="c">#   &#39;x&#39;: Cross,</span>
<span class="c">#   &#39;D&#39;: Diamond</span>
<span class="c">#</span>
<span class="c"># -- Line Styles</span>
<span class="c">#   &#39;-&#39;: Solid line,</span>
<span class="c">#   &#39;--&#39;: Dashed line,</span>
<span class="c">#   &#39;-.&#39;: Dash-dot line,</span>
<span class="c">#   &#39;:&#39;: Dotted line</span>
<span class="c">#</span>
<span class="c"># -- Color</span>
<span class="c">#   &#39;b&#39;: Blue,</span>
<span class="c">#   &#39;c&#39;: Cyan,</span>
<span class="c">#   &#39;g&#39;: Green,</span>
<span class="c">#   &#39;k&#39;: Black,</span>
<span class="c">#   &#39;m&#39;: Magenta,</span>
<span class="c">#   &#39;r&#39;: Red,</span>
<span class="c">#   &#39;w&#39;: White,</span>
<span class="c">#   &#39;y&#39;: Yellow</span>

<span class="n">plot</span><span class="p">(</span><span class="n">I</span><span class="p">,</span> <span class="n">I</span><span class="o">*</span><span class="n">I</span><span class="p">,</span> <span class="s">&#39;o-&#39;</span><span class="p">,</span> <span class="n">lw</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">ms</span><span class="o">=</span><span class="mi">6</span><span class="p">)</span> <span class="c"># lw/linewidth - Line Width, ms/markersize - Marker Size</span>
</pre></div>

<h3 id="toc_3">2. Axes and Grids, text, legends and titles</h3>
<div class="highlight"><pre><span class="c"># range of axes</span>
<span class="n">axis</span><span class="p">([</span><span class="o">-</span><span class="mi">6</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="o">-</span><span class="mi">6</span><span class="p">,</span> <span class="mi">6</span><span class="p">])</span>    <span class="c"># accept an array with [xmin, xmax, ymin, ymax]</span>
<span class="n">xlim</span><span class="p">(</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>   <span class="c"># or if you want to set Axis X or Axis Y separately</span>
<span class="n">ylim</span><span class="p">(</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span> 
<span class="n">axis</span><span class="p">()</span>  <span class="c"># check the current axes range</span>
<span class="n">xlim</span><span class="p">()</span>
<span class="n">ylim</span><span class="p">()</span>

<span class="c"># grids and ticks</span>
<span class="n">grid</span><span class="p">(</span><span class="bp">True</span><span class="p">)</span>  <span class="c"># set grid display to True or False</span>
<span class="n">xticks</span><span class="p">(</span><span class="n">arange</span><span class="p">(</span><span class="o">-</span><span class="mi">5</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">1</span><span class="p">))</span>    <span class="c"># customize the tick locations on Axis X</span>
<span class="n">yticks</span><span class="p">(</span><span class="n">arange</span><span class="p">(</span><span class="o">-</span><span class="mi">5</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="mi">5</span><span class="p">))</span>   <span class="c"># customize the tick locations on Axis Y</span>
<span class="n">xticks</span><span class="p">(</span><span class="n">arange</span><span class="p">(</span><span class="mi">5</span><span class="p">),</span> <span class="p">(</span><span class="s">&#39;Tom&#39;</span><span class="p">,</span> <span class="s">&#39;Jerry&#39;</span><span class="p">,</span> <span class="s">&#39;Sally&#39;</span><span class="p">,</span> <span class="s">&#39;Harry&#39;</span><span class="p">,</span> <span class="s">&#39;Me&#39;</span><span class="p">))</span>   <span class="c"># also customize the tick labels</span>

<span class="c"># draw axes lines</span>
<span class="n">axvline</span><span class="p">(</span><span class="n">linewidth</span><span class="o">=</span><span class="mi">4</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s">&#39;r&#39;</span><span class="p">)</span> <span class="c"># draw a vertical axis line at x=0, with linewidth and color</span>
<span class="n">axvline</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mf">0.2</span><span class="p">,</span> <span class="mf">0.8</span><span class="p">)</span>    <span class="c"># draw a vertical line on x=1, with vertical ratio (0.2, 0.8) of the graph&#39;s height</span>
<span class="n">axhline</span><span class="p">(</span><span class="n">y</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">xmin</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">xmax</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>    <span class="c"># draw a horizontal axis similar to axvline()</span>

<span class="c"># enable legends</span>
<span class="n">plot</span><span class="p">(</span><span class="n">I</span><span class="p">,</span> <span class="n">I</span><span class="o">*</span><span class="n">I</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s">&quot;y = x^2&quot;</span><span class="p">)</span>
<span class="n">legend</span><span class="p">()</span>    <span class="c"># enable legends of existing lines</span>
<span class="n">legend</span><span class="p">([</span><span class="s">&#39;sin(x)&#39;</span><span class="p">,</span> <span class="s">&#39;cos(x)&#39;</span><span class="p">])</span>    <span class="c"># set legend text explicitly</span>


<span class="c"># text at any position</span>
<span class="n">text</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="s">&#39;text positioned at (1, 1)&#39;</span><span class="p">,</span> <span class="n">va</span><span class="o">=</span><span class="s">&#39;baseline&#39;</span><span class="p">,</span> <span class="n">ha</span><span class="o">=</span><span class="s">&#39;left&#39;</span><span class="p">)</span>   <span class="c"># draw text with vertical and horizontal alignment</span>
<span class="n">text</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="s">&#39;some text&#39;</span><span class="p">,</span> <span class="n">bbox</span><span class="o">=</span><span class="nb">dict</span><span class="p">(</span><span class="n">facecolor</span><span class="o">=</span><span class="s">&#39;red&#39;</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=</span><span class="mf">0.5</span><span class="p">))</span>  <span class="c"># draw text with a rectangle background</span>

<span class="c"># title of the graph</span>
<span class="n">title</span><span class="p">(</span><span class="s">&#39;some title&#39;</span><span class="p">,</span> <span class="n">va</span><span class="o">=</span><span class="s">&#39;baseline&#39;</span><span class="p">,</span> <span class="n">ha</span><span class="o">=</span><span class="s">&#39;center&#39;</span><span class="p">)</span> <span class="c"># draw the title text of the graph</span>

<span class="c"># labels of axes</span>
<span class="n">xlabel</span><span class="p">(</span><span class="s">&#39;Time&quot;)</span>
<span class="n">ylabel</span><span class="p">(</span><span class="s">&#39;Money we gain&#39;</span><span class="p">)</span>

<span class="c"># use (TeX-like) symbols, **you must use raw string (r&#39;text&#39;)**</span>
<span class="n">title</span><span class="p">(</span><span class="s">r&#39;$ \alpha_i &gt; \beta_i $&#39;</span><span class="p">)</span>    <span class="c"># TeX-like symbols should be surrounded by &#39;$$&#39;</span>
</pre></div>
<p>For more TeX symbols, please check the <a href="http://matplotlib.org/users/mathtext.html#symbols">reference on matplolib</a>.</p>

<h3 id="toc_4">3. Figure control</h3>
<div class="highlight"><pre><span class="c"># create / specify a figure to plot</span>
<span class="n">figure</span><span class="p">()</span>    <span class="c"># create a new figure by default</span>
<span class="n">figure</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>   <span class="c"># switch to the figure with id 2</span>
<span class="c"># save figure to a file (select format by extension)</span>
<span class="n">savefig</span><span class="p">(</span><span class="s">&#39;filename.png&#39;</span><span class="p">)</span> 

<span class="c"># creating subplots</span>
<span class="c"># subplot(numRows, numCols, plotNum)</span>
<span class="n">subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>    <span class="c"># the default </span>
<span class="n">subplot</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>    <span class="c"># split in 2 x 1 table, and draw on upper half</span>
<span class="n">subplot</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>    <span class="c"># split in 2 x 2 table, and draw on the bottom left(it can work together with the above one, as long as the plots don&#39;t overlap)</span>

<span class="c"># erasing the graph </span>
<span class="n">cla</span><span class="p">()</span>   <span class="c"># clear axes</span>
<span class="n">clf</span><span class="p">()</span>   <span class="c"># clear figure</span>
<span class="n">close</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>    <span class="c"># close figure with id (if specified)</span>
</pre></div>
]]>
        </content>
    </entry><entry>
        <title type="html"><![CDATA[Cocos2d-x-2.2.0 Setup Guide (for Android and iOS)]]></title>
        <author><name>terryoy</name></author>
        <link href="http://terryoy.github.io/2013/11/cocos2d-x-setup.html"/>
        <published>2013-11-27T09:00:00+08:00</published>
        <updated>2014-02-06T18:12:24+08:00</updated>
        <id>http://terryoy.github.io/2013/11/cocos2d-x-setup.html</id>
        <category scheme="http://terryoy.github.io/tag/#linux" term="linux" label="linux" />
        <category scheme="http://terryoy.github.io/tag/#game" term="game" label="game" />
        <category scheme="http://terryoy.github.io/tag/#mobile" term="mobile" label="mobile" />
        <content type="html" xml:base="http://terryoy.github.io/" xml:lang="en">
            <![CDATA[ <p>This guide describes the steps to setup a development environment for Cocos2d-x the cross-platform game development framework, on Linux and Mac OSX.</p>

<h2 id="toc_0">1. Download packages</h2>
<p>In this guide, we&#39;ll use cocos2d-x-2.x as example, and we&#39;ll setup for Android and iOS app development. So, the following packages will be needed:</p>

<table><thead>
<tr>
<th>Packages</th>
<th>Links</th>
<th>Remark</th>
</tr>
</thead><tbody>
<tr>
<td>Cocos2d-x:</td>
<td><a href="http://www.cocos2d-x.org/download">www.cocos2d-x.org/download</a></td>
<td>use latest of v2.x</td>
</tr>
<tr>
<td>ADT bundle:</td>
<td><a href="http://developer.android.com/sdk/index.html">developer.android.com/sdk/index.html</a></td>
<td>Android Development Tools</td>
</tr>
<tr>
<td>Android NDK:</td>
<td><a href="http://developer.android.com/tools/sdk/ndk/index.html">developer.android.com/tools/sdk/ndk/index.html</a></td>
<td>legacy-toolchains package is not neccessary</td>
</tr>
</tbody></table>
<p>Unzip the three packages to a folder. For example, after I extract the files, the paths looks like:</p>

<pre><code>~/develop/android/adt-bundle-linux-x86-20131030/eclipse
~/develop/android/adt-bundle-linux-x86-20131030/sdk
~/develop/android/adt-bundle-linux-x86-20131030/android-ndk-r9b
~/develop/cocos2dx/cocos2d-x-2.2.0/</code></pre>
<p>Next go to Eclipe(for Android) or Xcode(for iOS) for next step.</p>

<h2 id="toc_1">2. Android Setup</h2>

<h3 id="toc_2">Check device accessible</h3>
<p>You better make sure you can access your android tablet before building it on the device. The method to check is a &ldquo;adb devices&rdquo; command(don&#39;t forget to turn on the debug mode on the tablet first):</p>

<pre><code>$ cd $ANDROID_SDK_HOME/platform-tools
$ ./adb devices
* daemon not running. starting it now on port 5037 *
* daemon started successfully *
List of devices attached 
????????????    no permissions</code></pre>
<p>If you see the device listed without a valid name, and marked with &ldquo;no permissions&rdquo;, the reason is often that you started ADB Server not as root. Try to fix that is to restart the adb daemon in root access:</p>

<pre><code># be sure to close ADT first, because sometimes it make adb started in user even with sudo
$ sudo ./adb kill-server
$ sudo ./adb start-server
# check adb server running user
$ ps -ef | grep adb
root     15657     1  0 09:59 pts/0    00:00:00 adb -P 5037 fork-server server
# check device list
$ ./adb devices
List of devices attached 
20080411    device
# try if you can connect to the device and run with shell
$ ./adb shell</code></pre>
<p>If all successful, open Eclipse IDE and we&#39;ll build the project.</p>

<h3 id="toc_3">Importing The Library and The Projects</h3>
<p>We&#39;ll import twice: one for the <strong>cocos2d-x library</strong>, one for the <strong>sample projects</strong>.</p>
<p><img src="/images/2013/cocos_import.png" alt="alt" title="Import existing projects"/></p>
<p>The search path for cocos2d-x library is &ldquo;<strong><em>$COCOS2DX_ROOT/cocos2dx</em></strong>&rdquo;</p>
<p><img src="/images/2013/cocos_import_lib.png" alt="alt" title="Import cocos2d-x lib"/></p>
<p>The search path for sample projects is &ldquo;<strong><em>$COCOS2DX_ROOT/samples/Cpp/</em></strong>&rdquo;(because we&#39;re going to use C++ for cocos2d-x development).</p>
<p><img src="/images/2013/cocos_import_tests.png" alt="alt" title="Import sample projects"/></p>
<p>After that we&#39;ll see the projects in the workspace:</p>
<p><img src="/images/2013/cocos_import_success.png" alt="alt" title="Imported projects"/></p>

<h3 id="toc_4">Setting Environment Variables</h3>
<p>If you try building the project &ldquo;TestCpp&rdquo; now, you will probably find the below error:</p>
<p><img src="/images/2013/cocos_build_ndk_error.png" alt="alt" title="Compile error"/></p>
<p>It&#39;s because we have to set the environment variables for the compiler. It needs &ldquo;<strong>COCOS2DX_ROOT</strong>&rdquo; and &ldquo;<strong>NDK_ROOT</strong>&rdquo; to build the project. So open &ldquo;Window -&gt; Preferences -&gt; C/C++ -&gt; Build -&gt; Environment&rdquo; in the Eclipse IDE, and set the variables similar to below:</p>
<p><img src="/images/2013/cocos_set_env_vars.png" alt="alt" title="Path variables"/></p>
<p>After that, select the &ldquo;TestCpp&rdquo; and build again, you should be able to see the build succesful messages:</p>
<p><img src="/images/2013/cocos_build_sucessful.png" alt="alt" title="NDK build successful"/></p>

<h3 id="toc_5">Running on Tablet</h3>
<p>Next try running it on the tablet. Click &ldquo;Run&rdquo; and (after the build) you will get the &ldquo;Android Device Chooser&rdquo; below:</p>
<p><img src="/images/2013/cocos_avd.png" alt="alt" title="Android Device Chooser"/></p>
<p>Here you could choose the plugged in tablet which you have configured in the previous steps to run the program. Or you could choose to create a new emulator to run it on your computer. If you have problem seeing the device in the list, go back to the &ldquo;Check device accessible&rdquo; step to check the device again. </p>
<p>If you find running the emulators very slow, check out the <a href="http://stackoverflow.com/questions/16732021/why-emulator-is-very-slow-in-android-studio">post here</a> for suggestions.</p>

<h2 id="toc_6">3. Xcode Setup</h2>
<p>(Since I had lost the log while setting up this, I won&#39;t update this part until I got a chance to try it again.)</p>
<p>Setting up in Xcode is pretty simple. Just extract the cocos2d-x-2.x.x.zip, and open the project files at <code>./samples/Cpp/HelloCpp/proj.ios/</code> with Xcode. Next, you should check the compiling errors and solve it one by one.</p>
<p>If the &ldquo;cocos2dx.xcodeproj&rdquo; sub-project displays as missing, you could open the . and select the &ldquo;Location&rdquo; for it, which should be pointed to <code>./cocos2dx/proj.ios/cocos2dx/</code></p>
<p>There are usually two build scheme in the Xcode project. One is for building the cocos2d-x framework, the other is the project it self. So before you build the project, you should build the cocos2d-x framework first.</p>

<h2 id="toc_7">4. Start a New Cross-platform Project</h2>
<p>There is one script for creating a new cocos2d-x project under the path <code>./tools/project-creator/</code></p>
<div class="highlight"><pre><span class="nv">$ </span>./create_project.py
Usage: create_project.py -project PROJECT_NAME -package PACKAGE_NAME -language PROGRAMING_LANGUAGE
Options:
  -project   PROJECT_NAME          Project name, <span class="k">for </span>example: MyGame
  -package   PACKAGE_NAME          Package name, <span class="k">for </span>example: com.MyCompany.MyAwesomeGame
  -language  PROGRAMING_LANGUAGE   Major programing lanauge you want to used, should be <span class="o">[</span>cpp | lua | javascript<span class="o">]</span>

Sample 1: ./create_project.py -project MyGame -package com.MyCompany.AwesomeGame
Sample 2: ./create_project.py -project MyGame -package com.MyCompany.AwesomeGame -language javascript
</pre></div>
<p>The new project will be created under <code>./projects/</code> under the root folder of cocos2d-x, and it is not easy if you want to put it outside this folder(for example, another git repos), because the project&#39;s dependencies uses relative paths to the cocos2d-x&#39;s components. It might differs in Xcode or in Eclipse, etc. So here we don&#39;t discuss further.</p>
]]>
        </content>
    </entry>
</feed>