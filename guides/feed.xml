<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Hello, World!</title>
    <link href="http://terryoy.github.io/guides/feed.xml" rel="self" />
    <link href="http://terryoy.github.io/guides/" />
    <updated>2013-12-03T12:53:55+08:00</updated>
    <id>http://terryoy.github.io/guides/</id>
    <entry>
        <title type="html"><![CDATA[Cocos2d-x-2.2.0 Setup Guide (for Android and iOS)]]></title>
        <author><name>terryoy</name></author>
        <link href="http://terryoy.github.io/2013/11/cocos2d-x-setup.html"/>
        <published>2013-11-27T09:00:00+08:00</published>
        <updated>2013-12-03T12:53:55+08:00</updated>
        <id>http://terryoy.github.io/2013/11/cocos2d-x-setup.html</id>
        <category scheme="http://terryoy.github.io/tag/#linux" term="linux" label="linux" />
        <category scheme="http://terryoy.github.io/tag/#game" term="game" label="game" />
        <category scheme="http://terryoy.github.io/tag/#mobile" term="mobile" label="mobile" />
        <content type="html" xml:base="http://terryoy.github.io/" xml:lang="en">
            <![CDATA[ <p>This guide describes the steps to setup a development environment for Cocos2d-x the cross-platform game development framework, on Linux and Mac OSX.</p>

<h2 id="toc_0">1. Download packages</h2>
<p>In this guide, we&#39;ll use cocos2d-x-2.x as example, and we&#39;ll setup for Android and iOS app development. So, the following packages will be needed:</p>

<table><thead>
<tr>
<th>Packages</th>
<th>Links</th>
<th>Remark</th>
</tr>
</thead><tbody>
<tr>
<td>Cocos2d-x:</td>
<td><a href="http://www.cocos2d-x.org/download">www.cocos2d-x.org/download</a></td>
<td>use latest of v2.x</td>
</tr>
<tr>
<td>ADT bundle:</td>
<td><a href="http://developer.android.com/sdk/index.html">developer.android.com/sdk/index.html</a></td>
<td>Android Development Tools</td>
</tr>
<tr>
<td>Android NDK:</td>
<td><a href="http://developer.android.com/tools/sdk/ndk/index.html">developer.android.com/tools/sdk/ndk/index.html</a></td>
<td>legacy-toolchains package is not neccessary</td>
</tr>
</tbody></table>
<p>Unzip the three packages to a folder. For example, after I extract the files, the paths looks like:</p>

<pre><code>~/develop/android/adt-bundle-linux-x86-20131030/eclipse
~/develop/android/adt-bundle-linux-x86-20131030/sdk
~/develop/android/adt-bundle-linux-x86-20131030/android-ndk-r9b
~/develop/cocos2dx/cocos2d-x-2.2.0/</code></pre>
<p>Next go to Eclipe(for Android) or Xcode(for iOS) for next step.</p>

<h2 id="toc_1">2. Android Setup</h2>

<h3 id="toc_2">Check device accessible</h3>
<p>You better make sure you can access your android tablet before building it on the device. The method to check is a &ldquo;adb devices&rdquo; command(don&#39;t forget to turn on the debug mode on the tablet first):</p>

<pre><code>$ cd $ANDROID_SDK_HOME/platform-tools
$ ./adb devices
* daemon not running. starting it now on port 5037 *
* daemon started successfully *
List of devices attached 
????????????    no permissions</code></pre>
<p>If you see the device listed without a valid name, and marked with &ldquo;no permissions&rdquo;, the reason is often that you started ADB Server not as root. Try to fix that is to restart the adb daemon in root access:</p>

<pre><code># be sure to close ADT first, because sometimes it make adb started in user even with sudo
$ sudo ./adb kill-server
$ sudo ./adb start-server
# check adb server running user
$ ps -ef | grep adb
root     15657     1  0 09:59 pts/0    00:00:00 adb -P 5037 fork-server server
# check device list
$ ./adb devices
List of devices attached 
20080411    device
# try if you can connect to the device and run with shell
$ ./adb shell</code></pre>
<p>If all successful, open Eclipse IDE and we&#39;ll build the project.</p>

<h3 id="toc_3">Importing The Library and The Projects</h3>
<p>We&#39;ll import twice: one for the <strong>cocos2d-x library</strong>, one for the <strong>sample projects</strong>.</p>
<p><img src="/images/2013/cocos_import.png" alt="alt" title="Import existing projects"/></p>
<p>The search path for cocos2d-x library is &ldquo;<strong><em>$COCOS2DX_ROOT/cocos2dx</em></strong>&rdquo;</p>
<p><img src="/images/2013/cocos_import_lib.png" alt="alt" title="Import cocos2d-x lib"/></p>
<p>The search path for sample projects is &ldquo;<strong><em>$COCOS2DX_ROOT/samples/Cpp/</em></strong>&rdquo;(because we&#39;re going to use C++ for cocos2d-x development).</p>
<p><img src="/images/2013/cocos_import_tests.png" alt="alt" title="Import sample projects"/></p>
<p>After that we&#39;ll see the projects in the workspace:</p>
<p><img src="/images/2013/cocos_import_success.png" alt="alt" title="Imported projects"/></p>

<h3 id="toc_4">Setting Environment Variables</h3>
<p>If you try building the project &ldquo;TestCpp&rdquo; now, you will probably find the below error:</p>
<p><img src="/images/2013/cocos_build_ndk_error.png" alt="alt" title="Compile error"/></p>
<p>It&#39;s because we have to set the environment variables for the compiler. It needs &ldquo;<strong>COCOS2DX_ROOT</strong>&rdquo; and &ldquo;<strong>NDK_ROOT</strong>&rdquo; to build the project. So open &ldquo;Window -&gt; Preferences -&gt; C/C++ -&gt; Build -&gt; Environment&rdquo; in the Eclipse IDE, and set the variables similar to below:</p>
<p><img src="/images/2013/cocos_set_env_vars.png" alt="alt" title="Path variables"/></p>
<p>After that, select the &ldquo;TestCpp&rdquo; and build again, you should be able to see the build succesful messages:</p>
<p><img src="/images/2013/cocos_build_sucessful.png" alt="alt" title="NDK build successful"/></p>

<h3 id="toc_5">Running on Tablet</h3>
<p>Next try running it on the tablet. Click &ldquo;Run&rdquo; and (after the build) you will get the &ldquo;Android Device Chooser&rdquo; below:</p>
<p><img src="/images/2013/cocos_avd.png" alt="alt" title="Android Device Chooser"/></p>
<p>Here you could choose the plugged in tablet which you have configured in the previous steps to run the program. Or you could choose to create a new emulator to run it on your computer. If you have problem seeing the device in the list, go back to the &ldquo;Check device accessible&rdquo; step to check the device again. </p>
<p>If you find running the emulators very slow, check out the <a href="http://stackoverflow.com/questions/16732021/why-emulator-is-very-slow-in-android-studio">post here</a> for suggestions.</p>

<h2 id="toc_6">3. Xcode Setup</h2>
<p>(still writing&hellip;)</p>
]]>
        </content>
    </entry>
</feed>